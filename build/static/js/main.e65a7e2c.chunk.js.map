{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonList.js","components/ErrorNotification.js","components/GreenNotification.js","services/Contacts.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","PersonList","persons","handleDeleteName","toShow","filter","person","name","toLowerCase","includes","map","number","onClick","id","ErrorNotification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","GreenNotification","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","greenMessage","setGreenMessage","useEffect","personService","initialPersons","event","target","preventDefault","newPerson","some","window","confirm","request","concat","catch","error","setTimeout","console","log","toDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAUeA,EARA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACzB,OACQ,qDACsB,uBAAOC,MAAOF,EAAWG,SAAUF,QCwBtDG,EA3BI,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBAEjE,OACI,8BACI,uBAAMC,SAAUL,EAAhB,UACI,wCAEI,uBACIH,MAAOI,EACPH,SAAUI,OAGlB,0CAEI,uBACIL,MAAOM,EACPL,SAAUM,OAGlB,8BACI,wBAAQE,KAAK,SAAb,yBCXLC,EATI,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASb,EAAkC,EAAlCA,UAAWc,EAAuB,EAAvBA,iBAChCC,EAASF,EAAQG,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASpB,EAAUmB,kBACrF,OACI,8BACKJ,EAAOM,KAAI,SAAAJ,GAAM,OAAI,kCAAqBA,EAAOC,KAA5B,IAAmCD,EAAOK,OAA1C,IAAkD,wBAAQpB,MAAOe,EAAQM,QAAST,EAAiBG,GAAjD,oBAAlD,MAAQA,EAAOO,UCiBlCC,EArBW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAWzB,OAAgB,OAAZA,EAEI,qBAAKC,MAZC,CACVC,MAAO,MACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,QAKV,SACKR,IAIN,MCIIS,EAtBW,SAAC,GAAiB,IAAfT,EAAc,EAAdA,QAWzB,OAAgB,OAAZA,EAEI,qBAAKC,MAZC,CACVC,MAAO,QACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,QAKV,SACKR,IAKN,M,gBCnBLU,EAAU,eAuBD,EArBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAhBA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAACjB,EAAIkB,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBZ,GAAMkB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACjB,GAEZ,OADgBa,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BZ,IAC5Be,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCkF9BK,EA7FH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACNlC,EADM,KACGmC,EADH,OAEkBD,mBAAS,IAF3B,mBAENzC,EAFM,KAEG2C,EAFH,OAGsBF,mBAAS,IAH/B,mBAGNvC,EAHM,KAGK0C,EAHL,OAIsBH,mBAAS,IAJ/B,mBAIN/C,EAJM,KAIKmD,EAJL,OAK4BJ,mBAAS,MALrC,mBAKNK,EALM,KAKQC,EALR,OAM4BN,mBAAS,MANrC,mBAMNO,EANM,KAMQC,EANR,KAQdC,qBAAU,WACNC,IAEKlB,MAAK,SAAAmB,GACFV,EAAWU,QAEpB,IAiEH,OACI,gCACI,2CACA,cAAC,EAAD,CAAmBhC,QAAS0B,IAC5B,cAAC,EAAD,CAAmB1B,QAAS4B,IAC5B,cAAC,EAAD,CAAQtD,UAAWA,EAAWC,mBATX,SAAC0D,GACxBR,EAAaQ,EAAMC,OAAO1D,UAStB,2CACA,cAAC,EAAD,CAAYG,QAtEJ,SAACsD,GACbA,EAAME,iBACN,IAAMC,EAAY,CAAE5C,KAAMZ,EAAUgB,OAAQd,GACxCK,EAAQkD,MAAK,SAAA9C,GAAM,OAAIX,IAAYW,EAAOC,QACtC8C,OAAOC,QAAP,UAAkB3D,EAAlB,2EACAmD,EAAqB5C,EAAQG,QAAO,SAAAC,GAAM,OAAIX,IAAYW,EAAOC,QAAM,GAAGM,GAAIsC,GACzEvB,MAAK,SAAA2B,GACFlB,EAAWnC,EAAQG,QAAO,SAAAC,GAAM,OAAIA,EAAOO,KAAO0C,EAAQ1C,MAAI2C,OAAOD,OAExEE,OAAM,SAAAC,GACHhB,EAAgB,kBAAD,OAAmB/C,EAAnB,0CACfgE,YAAW,WACPjB,EAAgB,QACjB,QAIfI,EACYK,GACPvB,MAAK,SAAA2B,GACFlB,EAAWnC,EAAQsD,OAAOD,IAC1BjB,EAAW,IACXC,EAAa,IACbK,EAAgB,SAAD,OAAUO,EAAU5C,OACnCoD,YAAW,WACPf,EAAgB,QACjB,QAENa,OAAM,SAAAC,GACHE,QAAQC,IAAIH,EAAM7B,SAASC,MAC3BY,EAAgB,SAChBiB,YAAW,WACPjB,EAAgB,QACjB,SAqCmB/C,QAASA,EAASC,iBAnB/B,SAACoD,GACtBV,EAAWU,EAAMC,OAAO1D,QAkBgEM,UAAWA,EAAWC,mBAfvF,SAACkD,GACxBT,EAAaS,EAAMC,OAAO1D,UAetB,yCACA,cAAC,EAAD,CAAYW,QAASA,EAASb,UAAWA,EAAWc,iBAlCnC,SAAC2D,GAAD,OAAc,WAC/BT,OAAOC,QAAP,iBAAyBQ,EAASvD,KAAlC,OACAuC,EAAqBgB,EAASjD,IACzBe,MAAK,WACFS,EAAWnC,EAAQG,QAAO,SAAAC,GAAM,OAAIA,EAAOO,KAAOiD,EAASjD,OAC3D+B,EAAgB,WAAD,OAAYkB,EAASvD,OACpCoD,YAAW,WACPf,EAAgB,QACjB,gBCpEvBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e65a7e2c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ newFilter, handleFilterChange }) => {\n    return (\n            <div>\n                filter shown with:<input value={newFilter} onChange={handleFilterChange} />\n            </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({ addName, newName, handleNameChange, newNumber, handleNumberChange }) => {\n\n    return (\n        <div>\n            <form onSubmit={addName}>\n                <div>\n                    name: \n                    <input \n                        value={newName} \n                        onChange={handleNameChange}\n                    />\n                </div>\n                <div>\n                    number: \n                    <input \n                        value={newNumber} \n                        onChange={handleNumberChange}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst PersonList = ({ persons, newFilter, handleDeleteName }) => {\n    const toShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n    return (\n        <div>\n            {toShow.map(person => <p key={person.id}> {person.name} {person.number} <button value={person} onClick={handleDeleteName(person)}>delete</button> </p>)}\n        </div>\n    )\n}\n\nexport default PersonList\n","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n    const style = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px',\n    }\n\n    if (message !== null) {\n        return (\n            <div style={style}>\n                {message}\n            </div>\n        )\n    }\n    return null\n}\n\nexport default ErrorNotification\n","import React from 'react'\n\nconst GreenNotification = ({ message }) => {\n    const style = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderRadius: '5px',\n        padding: '10px',\n        marginBottom: '10px',\n    }\n\n    if (message !== null) {\n        return (\n            <div style={style}>\n                {message}\n            </div>\n        )\n    } \n\n    return null\n}\n\nexport default GreenNotification\n","import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport PersonList from './components/PersonList'\nimport ErrorNotification from './components/ErrorNotification'\nimport GreenNotification from './components/GreenNotification'\n\nimport personService from './services/Contacts'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ newFilter, setNewFilter ] = useState('')\n    const [ errorMessage, setErrorMessage ] = useState(null)\n    const [ greenMessage, setGreenMessage ] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const addName = (event) => {\n        event.preventDefault()\n        const newPerson = { name: newName,  number: newNumber}\n        if (persons.some(person => newName === person.name)) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)) {\n                personService.update(persons.filter(person => newName === person.name)[0].id, newPerson)\n                    .then(request => {\n                        setPersons(persons.filter(person => person.id !== request.id).concat(request))\n                    })\n                    .catch(error => {\n                        setErrorMessage(`Information of ${newName} has already been removed from server`)\n                        setTimeout(() => {\n                            setErrorMessage(null)\n                        }, 5000)\n                    })\n            }\n        } else {\n            personService\n                .create(newPerson)\n                .then(request => {\n                    setPersons(persons.concat(request))\n                    setNewName('')\n                    setNewNumber('')\n                    setGreenMessage(`Added ${newPerson.name}`)\n                    setTimeout(() => {\n                        setGreenMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    console.log(error.response.data)\n                    setErrorMessage(\"pillu\")\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const handleDeleteName = (toDelete) => () =>  {\n        if (window.confirm(`Delete ${toDelete.name}?`)) {\n            personService.remove(toDelete.id)\n                .then(() => {\n                    setPersons(persons.filter(person => person.id !== toDelete.id))\n                    setGreenMessage(`Deleted ${toDelete.name}`)\n                    setTimeout(() => {\n                        setGreenMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <ErrorNotification message={errorMessage} />\n            <GreenNotification message={greenMessage} />\n            <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n            <h3>Add a new</h3>\n            <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n            <h3>Numbers</h3>\n            <PersonList persons={persons} newFilter={newFilter} handleDeleteName={handleDeleteName} />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}